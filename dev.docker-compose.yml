x-redis-env: &redis-env
  REDIS_HOST: "redis"
  REDIS_PORT: 6379

x-grpc-env: &grpc-env
  PROVIDER_CONNS: provider-stocks:8082=TCSG,YNDX,SBER,TSLA,MOEX;provider-crypto:9092=BTC,ETH,ADA,USDT,SOL;provider-dummy:50000=dummy

services:
  provider-stocks:
    image: docker.io/iskorotkov/finance-dashboard-provider-stocks:v0.1.0-dev
    environment:
      TOKEN: <token>
      TICKERS: TCSG;YNDX;SBER;TSLA;MOEX
    ports:
      - "8081:8081" # For http requests from frontend.
      - "8082:8082" # For GRPC requests from prediction service.
  frontend:
    image: docker.io/iskorotkov/finance-dashboard-frontend:v0.1.0-dev
    environment:
      NODE_ENV: production
      REACT_APP_PROVIDERS: Stocks=ws://localhost:8081/api/v1/stocks;Crypto=ws://localhost:9091/api/v1/coins
      REACT_APP_PREDICTION_SERVICE: http://localhost:5000
    ports:
      - "3000:3000"
  provider-crypto:
    image: docker.io/korpatiy/finance-dashboard-provider-crypto:v0.3.5-dev
    environment:
      CRYPTO_COINBASE_KEY: <api key>
      CRYPTO_MESSARI_KEY: <api key>
      CRYPTO_DELAY: 10001
      CRYPTO_GRPC_PORT: 9092
      CRYPTO_PORT: 9091
      CRYPTO_COINS: btc;eth;ada;usdt;sol
    ports:
      - "9091:9091"
      - "9092:9092"
  redis:
    image: docker.io/library/redis:6.2
  worker:
    image: docker.io/mkls0/prediction-service:0.1
    command: "/app/worker.py"
    entrypoint: "python"
    environment:
      <<: *redis-env
    depends_on:
      - redis
  scheduler:
    image: docker.io/mkls0/prediction-service:0.1
    entrypoint: "python"
    command: "/app/scheduler.py"
    ports:
      - "5000:5000"
    environment:
      <<: *redis-env
      <<: *grpc-env
    depends_on:
      - redis
